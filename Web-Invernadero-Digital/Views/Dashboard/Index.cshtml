<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Dashboard Invernadero ULSA</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Bootstrap + FontAwesome -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            background-color: #f4f6f9;
            font-family: 'Segoe UI', sans-serif;
        }

        .dashboard-header {
            background: #e6f4ea;
            border-radius: 12px;
            padding: 2rem;
            margin-bottom: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .dashboard-header h3 {
                color: #198754;
                font-weight: bold;
            }

            .dashboard-header p {
                margin: 0;
                color: #555;
            }

        .stat-card {
            border-left: 5px solid #198754;
            border-radius: 12px;
            background: white;
            box-shadow: 0 1px 4px rgba(0,0,0,0.05);
        }

            .stat-card .card-body {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

            .stat-card h6 {
                color: #888;
            }

            .stat-card h3 {
                color: #198754;
            }

        .chart-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 1px 4px rgba(0,0,0,0.05);
            padding: 1.5rem;
        }

            .chart-card h5 {
                color: #198754;
                font-weight: 600;
            }
    </style>
</head>
<body>
    <div class="container-fluid p-4">
        <!-- Cabecera -->
        <div class="welcome-section p-5 mb-4 rounded-3 shadow-sm d-flex flex-column flex-lg-row align-items-center justify-content-between" style="background: #e6f4ea;">
            <div class="text-section mb-4 mb-lg-0">
                <h2 class="fw-bold text-success">¡Bienvenido de nuevo, tu dashboard está listo! 🌱</h2>
                <p class="text-muted fs-5">Monitorea los sensores y controla el invernadero en tiempo real.</p>
                <a href="#controles" class="btn btn-success btn-lg mt-3">Ir a controles <i class="fas fa-arrow-down ms-2"></i></a>
            </div>
            <div class="img-section text-center">
                <img src="https://cdn.dribbble.com/users/149253/screenshots/15436094/media/7aa15c865e2f046844d9b01f65f7f2c2.png" alt="Ilustración Dashboard" class="img-fluid" style="max-width: 420px;">
            </div>
        </div>

        <!-- Estadísticas principales -->
        <div class="row mb-4">
            <div class="col-md-6 mb-3">
                <div class="card stat-card">
                    <div class="card-body">
                        <div>
                            <h6>Temperatura Actual</h6>
                            <h3><span id="currTemp">--</span> °C</h3>
                        </div>
                        <i class="fas fa-thermometer-half fa-2x text-success"></i>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <div class="card stat-card">
                    <div class="card-body">
                        <div>
                            <h6>Humedad Actual</h6>
                            <h3><span id="currHum">--</span> %</h3>
                        </div>
                        <i class="fas fa-tint fa-2x text-success"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Botón para cargar datos -->
        <div class="mb-3 d-flex justify-content-end">
            <button onclick="fetchLatestSensorData()" class="btn btn-success">
                <i class="fas fa-sync-alt me-2"></i> Cargar Datos
            </button>
        </div>

        <!-- Gráficas -->
        <div class="row">
            <div class="col-lg-6 mb-4">
                <div class="chart-card">
                    <h5><i class="fas fa-thermometer-half me-2"></i>Histórico de Temperatura</h5>
                    <canvas id="tempChart" height="200"></canvas>
                </div>
            </div>
            <div class="col-lg-6 mb-4">
                <div class="chart-card">
                    <h5><i class="fas fa-tint me-2"></i>Histórico de Humedad</h5>
                    <canvas id="humChart" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const apiBaseUrl = "https://localhost:7139";

        const tempChart = new Chart(document.getElementById('tempChart'), {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Temperatura (°C)',
                    data: [],
                    borderColor: '#198754',
                    backgroundColor: 'rgba(25, 135, 84, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            }
        });

        const humChart = new Chart(document.getElementById('humChart'), {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Humedad (%)',
                    data: [],
                    borderColor: '#198754',
                    backgroundColor: 'rgba(25, 135, 84, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            }
        });

        async function fetchLatestSensorData() {
            try {
                const response = await fetch(`${apiBaseUrl}/api/Control/lectura`);
                if (!response.ok) throw new Error('Error al obtener datos del sensor');
                const data = await response.json();
                const timestamp = new Date().toLocaleTimeString();

                pushData(tempChart, timestamp, data.temperatura);
                pushData(humChart, timestamp, data.humedad);

                document.getElementById('currTemp').innerText = data.temperatura.toFixed(1);
                document.getElementById('currHum').innerText = data.humedad.toFixed(1);
            } catch (error) {
                console.error('❌ Error:', error);
            }
        }

        function pushData(chart, label, value) {
            chart.data.labels.push(label);
            chart.data.datasets[0].data.push(value);

            if (chart.data.labels.length > 20) {
                chart.data.labels.shift();
                chart.data.datasets[0].data.shift();
            }

            chart.update();
        }

        // Ejecutar inmediatamente al cargar la página
        fetchLatestSensorData();

        // Luego, seguir actualizando cada 5 segundos
        setInterval(fetchLatestSensorData, 1000);
    </script>

</body>
</html>






@* @{
    ViewData["Title"] = "Dashboard";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="container-fluid bg-light p-4">
    <div class="row">
        <!-- Main Charts -->
        <div class="col-md-9">
            <h2 class="mb-4">Invernadero ULSA - Dashboard</h2>

            <!-- Temperature Chart -->
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Histórico de Temperatura (°C)</h5>
                    <canvas id="tempChart"></canvas>
                </div>
            </div>

            <div class="row">
                <!-- Humidity Chart -->
                <div class="col-md-6">
                    <div class="card mb-4 shadow-sm">
                        <div class="card-body">
                            <h6 class="card-title">Histórico de Humedad (%)</h6>
                            <canvas id="humChart"></canvas>
                        </div>
                    </div>
                </div>
                <!-- Light Chart -->
                <div class="col-md-6">
                    <div class="card mb-4 shadow-sm">
                        <div class="card-body">
                            <h6 class="card-title">Histórico de Luz Ambiental</h6>
                            <canvas id="lightChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar Widgets -->
        <div class="col-md-3">
            <!-- Current Values -->
            <div class="card mb-4 shadow-sm">
                <div class="card-body text-center">
                    <h6 class="card-title">Valores Actuales</h6>
                    <p>Temperatura: <span id="currTemp">--</span> °C</p>
                    <p>Humedad: <span id="currHum">--</span> %</p>
                    <p>Luz: <span id="currLight">--</span></p>
                </div>
            </div>
            <!-- Date Filter -->
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <h6 class="card-title">Filtrar por Fecha</h6>
                    <input type="date" id="filterDate" class="form-control" />
                </div>
            </div>
            <!-- Sensor List -->
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <h6 class="card-title">Sensores Activos</h6>
                    <ul class="list-group">
                        <li class="list-group-item"><i class="fas fa-thermometer-half text-danger me-2"></i>Temperatura</li>
                        <li class="list-group-item"><i class="fas fa-tint text-info me-2"></i>Humedad</li>
                        <li class="list-group-item"><i class="fas fa-sun text-warning me-2"></i>Luz Ambiental</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@* <script>
    // Datos de ejemplo, reemplazar con llamada API
    const labels = ['10:00','11:00','12:00','13:00','14:00','15:00'];
    const tempData = [22, 23, 24, 23.5, 24.2, 24.8];
    const humData = [55, 58, 60, 59, 61, 63];
    const lightData = [300, 450, 500, 480, 520, 550];

    new Chart(document.getElementById('tempChart'), {
        type: 'line',
        data: { labels, datasets: [{ label: 'Temperatura', data: tempData, borderColor: '#dc3545', tension: 0.3, fill: false }] }
    });

    new Chart(document.getElementById('humChart'), {
        type: 'line',
        data: { labels, datasets: [{ label: 'Humedad', data: humData, borderColor: '#0d6efd', tension: 0.3, fill: false }] }
    });

    new Chart(document.getElementById('lightChart'), {
        type: 'line',
        data: { labels, datasets: [{ label: 'Luz Ambiental', data: lightData, borderColor: '#ffc107', tension: 0.3, fill: false }] }
    });

    // Valores actuales de ejemplo
    document.getElementById('currTemp').innerText = tempData[tempData.length-1];
    document.getElementById('currHum').innerText = humData[humData.length-1];
    document.getElementById('currLight').innerText = lightData[lightData.length-1];
</script> *@


@* <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const tempChart = new Chart(document.getElementById('tempChart'), {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'Temperatura',
                data: [],
                borderColor: '#dc3545',
                tension: 0.3,
                fill: false
            }]
        }
    });

    const humChart = new Chart(document.getElementById('humChart'), {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'Humedad',
                data: [],
                borderColor: '#0d6efd',
                tension: 0.3,
                fill: false
            }]
        }
    });

    const lightChart = new Chart(document.getElementById('lightChart'), {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'Luz Ambiental',
                data: [],
                borderColor: '#ffc107',
                tension: 0.3,
                fill: false
            }]
        }
    });

    async function fetchLatestSensorData() {
        try {
            const response = await fetch('/api/sensor/latest');
            if (!response.ok) throw new Error('Error al obtener datos del sensor');
            const data = await response.json();

            const timestamp = new Date(data.timestamp).toLocaleTimeString();

            // Agregar datos a los gráficos
            pushData(tempChart, timestamp, data.temperatura);
            pushData(humChart, timestamp, data.humedad);
            pushData(lightChart, timestamp, data.luz);

            // Actualizar valores actuales
            document.getElementById('currTemp').innerText = data.temperatura.toFixed(1);
            document.getElementById('currHum').innerText = data.humedad.toFixed(1);
            document.getElementById('currLight').innerText = data.luz.toFixed(0);

        } catch (error) {
            console.error('❌ Error:', error);
        }
    }

    function pushData(chart, label, value) {
        const data = chart.data;
        data.labels.push(label);
        data.datasets[0].data.push(value);

        // Mantener solo los últimos 20 datos
        if (data.labels.length > 20) {
            data.labels.shift();
            data.datasets[0].data.shift();
        }

        chart.update();
    }

    // Llamar a la función cada 3 segundos
    setInterval(fetchLatestSensorData, 3000);
</script>

 *@