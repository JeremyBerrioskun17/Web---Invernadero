@*     <!DOCTYPE html>
    <html lang="es">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Centro de Control - Invernadero</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
        <style>
            body {
                background-color: #ffffff;
            }

            .card {
                background-color: #ffffff;
                border-left: 5px solid #4caf50;
                box-shadow: 0 0 10px rgba(76, 175, 80, 0.2);
            }

            .card-header {
                background-color: #e8f5e9;
                color: #2e7d32;
                font-weight: bold;
            }

            .table-container {
                height: 300px;
                overflow-y: auto;
                border: 1px solid #c8e6c9;
            }

            .fixed-table {
                table-layout: fixed;
                width: 100%;
            }

            .card i {
                margin-right: 8px;
                color: #4caf50;
            }
        </style>
    </head>

    @* <body>
        <div class="container py-4">
            <h2 class="text-center text-success mb-4">Centro de Control del Invernadero</h2>

            <!-- Monitoreo Cards -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header"><i class="fas fa-cogs"></i> Eficiencia del Motor</div>
                        <div class="card-body">
                            <h5 class="card-title" id="motorEfficiency">95%</h5>
                            <p class="card-text">El motor se encuentra funcionando correctamente.</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header"><i class="fas fa-thermometer-half"></i> Temperatura</div>
                        <div class="card-body">
                            <h5 class="card-title" id="temperatureValue">-- °C</h5>
                            <p class="card-text">Temperatura dentro del rango óptimo.</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header"><i class="fas fa-sun"></i> Luz Ambiental</div>
                        <div class="card-body">
                            <h5 class="card-title" id="lightStatus">--</h5>
                            <p class="card-text">Iluminación natural detectada.</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tabla de Logs -->
            <div class="mb-4">
                <h4 class="text-success">Registro de Monitoreo</h4>
                <div class="table-container">
                    <table class="table table-bordered table-striped fixed-table">
                        <thead class="table-success">
                            <tr>
                                <th>Fecha y Hora</th>
                                <th>Sensor</th>
                                <th>Valor</th>
                                <th>Estado</th>
                            </tr>
                        </thead>
                        <tbody id="logTableBody">
                            <!-- Nuevos datos se agregarán aquí -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Controles Manuales Adicionales -->
            <div class="row mt-4">

                <!-- Luces -->
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header"><i class="fas fa-lightbulb"></i> Luces</div>
                        <div class="card-body">
                            <p class="card-text">Control de las luces del invernadero.</p>
                            <div class="d-grid gap-2">
                                <button class="btn btn-success" onclick="sendCommand('luces/on')"><i class="fas fa-play"></i> Encender Luces</button>
                                <button class="btn btn-danger" onclick="sendCommand('luces/off')"><i class="fas fa-stop"></i> Apagar Luces</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Ventilador -->
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header"><i class="fas fa-fan"></i> Ventilador</div>
                        <div class="card-body">
                            <p class="card-text">Control del ventilador para ventilación.</p>
                            <div class="d-grid gap-2">
                                <button class="btn btn-success" onclick="sendCommand('ventilador/on')"><i class="fas fa-play"></i> Encender Ventilador</button>
                                <button class="btn btn-danger" onclick="sendCommand('ventilador/off')"><i class="fas fa-stop"></i> Apagar Ventilador</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Bomba de Agua -->
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header"><i class="fas fa-water"></i> Bomba de Agua</div>
                        <div class="card-body">
                            <p class="card-text">Activación de la bomba por 8 segundos.</p>
                            <button class="btn btn-primary w-100" onclick="sendCommand('bomba')">
                                <i class="fas fa-play"></i> Activar Bomba (8s)
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <script>
                    async function fetchSensorData() {
            try {
                const response = await fetch('/api/Sensor/latest');
                const data = await response.json();

                if (data.length > 0) {
                    const latest = data[data.length - 1];
                    const now = new Date().toLocaleString();

                    // Simula valores y estados
                    const sensores = [
                        {
                            nombre: 'Temperatura',
                            valor: `${latest.temperatura} °C`,
                            estado: latest.temperatura > 35 ? 'Alto' : 'Normal'
                        },
                        {
                            nombre: 'Humedad',
                            valor: `${latest.humedad} %`,
                            estado: latest.humedad < 30 ? 'Baja' : 'Óptima'
                        },
                        {
                            nombre: 'Luz',
                            valor: `${latest.luz} lx`,
                            estado: latest.luz < 200 ? 'Baja' : 'Adecuada'
                        },
                        {
                            nombre: 'Humedad del Suelo',
                            valor: `${latest.suelo}`,
                            estado: latest.suelo < 400 ? 'Seco' : 'Húmedo'
                        }
                    ];

                    // Mostrar último valor en tarjetas superiores
                    document.getElementById('temperatureValue').textContent = sensores[0].valor;
                    document.getElementById('lightStatus').textContent = sensores[2].estado;

                    // Agregar logs
                    sensores.forEach(s => {
                        const row = `
                            <tr>
                                <td>${now}</td>
                                <td>${s.nombre}</td>
                                <td>${s.valor}</td>
                                <td>${s.estado}</td>
                            </tr>`;
                        document.getElementById('logTableBody').insertAdjacentHTML('afterbegin', row);
                    });

                    // Limitar a 50 filas
                    const tbody = document.getElementById('logTableBody');
                    while (tbody.rows.length > 50) {
                        tbody.deleteRow(-1);
                    }
                }
            } catch (error) {
                console.error("Error al obtener datos:", error);
            }
        }


            function sendCommand(command) {
              fetch(`/api/Control/send/${command}`, {
                method: 'POST'
              }).then(res => console.log(`${command} enviado`));
            }

            setInterval(fetchSensorData, 5000);



                 const apiBaseUrl = "https://localhost:7139";

            async function sendCommand(commandPath) {
              try {
                const response = await fetch(`${apiBaseUrl}/api/Control/${commandPath}`, {
                  method: "POST"
                });

                const text = await response.text();
                document.getElementById('status').innerText = `Respuesta: ${text}`;
              } catch (error) {
                console.error('Error:', error);
                document.getElementById('status').innerText = 'Error al enviar el comando.';
              }
            }
        </script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    </body> 
 /html> *@

<!DOCTYPE html>
<html lang="es">
<head>
    <!-- Metadatos básicos -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Sistema de Invernadero Inteligente controlado por Arduino y una API en .NET. Monitorea temperatura, humedad, luz y más." />
    <meta name="theme-color" content="#34d399" />

    <!-- Título de la página -->
    <title>Invernadero Inteligente</title>

    <!-- Google Fonts: Lato y Open Sans -->
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&family=Open+Sans:wght@300;400;600&display=swap" rel="stylesheet" />

    <!-- TailwindCSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- AOS Animations -->
    <link href="https://unpkg.com/aos@2.3.4/dist/aos.css" rel="stylesheet" />
    <script src="https://unpkg.com/aos@2.3.4/dist/aos.js"></script>

    <!-- Iconos: Material Symbols y Font Awesome -->
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/your-kit-id.js" crossorigin="anonymous"></script> <!-- Reemplaza con tu Kit de FontAwesome -->
   
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Open+Sans:wght@400;700&display=swap" rel="stylesheet"

    <!-- Estilos base personalizados (opcional) -->
    <style>
        body {
            font-family: 'Open Sans', sans-serif;
        }

        h1, h2, h3 {
            font-family: 'Lato', sans-serif;
        }
    </style>

    <!-- Inicialización de AOS -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
          AOS.init({
            duration: 800,
            once: true,
            easing: 'ease-in-out',
          });
        });
    </script>
</head>

<body class="bg-white text-gray-800">
    <!-- Contenedor principal -->
    <div class="min-h-screen bg-white text-green-800 px-2 sm:px-4 md:px-6 lg:px-10 py-4 space-y-12 font-sans">

        <section class="max-w-7xl mx-auto flex flex-col-reverse lg:flex-row items-center justify-between gap-8 px-4 py-12" data-aos="fade-up">
            <!-- Texto de bienvenida -->
            <div class="flex-1">
                <div class="flex items-center gap-3 mb-4">
                    <i class="fas fa-seedling text-green-600 text-3xl"></i>
                    <h1 class="text-3xl sm:text-4xl font-bold text-green-800">Bienvenido al Invernadero Inteligente</h1>
                </div>
                <p class="text-green-700 text-lg leading-relaxed">
                    Este sistema automatizado monitorea y controla condiciones clave como temperatura, humedad del aire y del suelo, y luz solar, garantizando un crecimiento óptimo para tus plantas.
                </p>
            </div>

            <!-- Imagen representativa -->
            <div class="flex-1 flex justify-center">
                <img src="https://cdn-icons-png.flaticon.com/512/2900/2900654.png" alt="Invernadero" class="w-64 h-64 object-contain" />
            </div>
        </section>


        <section class="max-w-7xl mx-auto px-4 py-12" id="componentes">
            <!-- Título -->
            <div class="flex items-center gap-3 mb-8" data-aos="fade-right">
                <i class="fas fa-leaf text-green-600 text-3xl"></i>
                <h2 class="text-3xl font-bold text-green-800">Componentes del Sistema</h2>
            </div>

            <!-- Grid de componentes -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                <!-- Sensor temperatura/humedad -->
                <div class="bg-white shadow-md rounded-2xl p-6 border-l-4 border-green-500" data-aos="fade-up">
                    <i class="fas fa-thermometer-half text-4xl text-green-600 mb-4"></i>
                    <h3 class="text-xl font-semibold text-green-800 mb-2">Sensor de Temperatura y Humedad</h3>
                    <p class="text-green-700">Monitorea el ambiente del invernadero para mantener condiciones ideales de cultivo.</p>
                </div>

                <!-- Sensor de humedad del suelo -->
                <div class="bg-white shadow-md rounded-2xl p-6 border-l-4 border-green-500" data-aos="fade-up" data-aos-delay="100">
                    <i class="fas fa-tint text-4xl text-green-600 mb-4"></i>
                    <h3 class="text-xl font-semibold text-green-800 mb-2">Sensor de Humedad del Suelo</h3>
                    <p class="text-green-700">Detecta el nivel de humedad del suelo para activar el sistema de riego automáticamente.</p>
                </div>

                <!-- Sensor de luz -->
                <div class="bg-white shadow-md rounded-2xl p-6 border-l-4 border-green-500" data-aos="fade-up" data-aos-delay="200">
                    <i class="fas fa-sun text-4xl text-green-600 mb-4"></i>
                    <h3 class="text-xl font-semibold text-green-800 mb-2">Sensor de Luz</h3>
                    <p class="text-green-700">Mide la intensidad luminosa y permite activar LEDs suplementarios si es necesario.</p>
                </div>

                <!-- Ventilador automático -->
                <div class="bg-white shadow-md rounded-2xl p-6 border-l-4 border-green-500" data-aos="fade-up" data-aos-delay="300">
                    <i class="fas fa-fan text-4xl text-green-600 mb-4"></i>
                    <h3 class="text-xl font-semibold text-green-800 mb-2">Ventilador de Enfriamiento</h3>
                    <p class="text-green-700">Se activa para mantener la temperatura bajo control y prevenir el sobrecalentamiento.</p>
                </div>

                <!-- Bomba de riego -->
                <div class="bg-white shadow-md rounded-2xl p-6 border-l-4 border-green-500" data-aos="fade-up" data-aos-delay="400">
                    <i class="fas fa-water text-4xl text-green-600 mb-4"></i>
                    <h3 class="text-xl font-semibold text-green-800 mb-2">Bomba de Riego</h3>
                    <p class="text-green-700">Actúa cuando el sensor detecta que el suelo está seco, garantizando riego oportuno.</p>
                </div>

                <!-- Módulo Arduino -->
                <div class="bg-white shadow-md rounded-2xl p-6 border-l-4 border-green-500" data-aos="fade-up" data-aos-delay="500">
                    <i class="fas fa-microchip text-4xl text-green-600 mb-4"></i>
                    <h3 class="text-xl font-semibold text-green-800 mb-2">Módulo Arduino</h3>
                    <p class="text-green-700">Unidad de control central que recibe datos de sensores y ejecuta acciones automáticas.</p>
                </div>
            </div>
        </section>


        <!-- Gráficas -->
        @* <div class="row mb-4">
            <div class="col-lg-6 mb-4">
                <div class="card p-3">
                    <h5><i class="fas fa-thermometer-half me-2"></i>Histórico de Temperatura</h5>
                    <canvas id="tempChart" height="200"></canvas>
                </div>
            </div>
            <div class="col-lg-6 mb-4">
                <div class="card p-3">
                    <h5><i class="fas fa-tint me-2"></i>Histórico de Humedad</h5>
                    <canvas id="humChart" height="200"></canvas>
                </div>
            </div>
        </div> *@
        <section id="recopilacion-datos" class="w-full py-16 bg-white" data-aos="fade-up">
            <div class="w-full mx-auto px-2 sm:px-4 lg:px-6">
                <h2 class="text-3xl font-bold text-green-800 mb-8 flex items-center gap-2">
                    <i class="fas fa-leaf text-green-600 text-4xl"></i>
                    Recopilación de Datos
                </h2>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Temperatura -->
                    <div class="bg-green-50 rounded-2xl shadow-md p-6">
                        <h3 class="text-xl font-semibold text-green-700 mb-4 flex items-center gap-2">
                            <i class="fas fa-temperature-high text-green-600"></i> Histórico de Temperatura
                        </h3>
                        <canvas id="tempChart" height="200"></canvas>
                    </div>

                    <!-- Humedad -->
                    <div class="bg-green-50 rounded-2xl shadow-md p-6">
                        <h3 class="text-xl font-semibold text-green-700 mb-4 flex items-center gap-2">
                            <i class="fas fa-tint text-green-600"></i> Histórico de Humedad
                        </h3>
                        <canvas id="humChart" height="200"></canvas>
                    </div>
                </div>
            </div>
        </section>



        <section class="w-full py-16 bg-white" data-aos="fade-up">
            <div class="w-full mx-auto px-4 sm:px-6 lg:px-8">
                <!-- Título -->
                <h2 class="text-3xl font-bold text-green-800 mb-8 flex items-center gap-2 font-lato">
                    📊 Monitoreo en Vivo
                </h2>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">

                    <!-- Eficiencia del Motor -->
                    <div class="bg-white shadow-md rounded-3xl p-6 text-center transform transition-transform duration-300 ease-in-out hover:scale-105 hover:shadow-xl" data-aos="zoom-in">
                        <i class="fas fa-cogs text-yellow-500 text-5xl mb-4"></i>
                        <h5 class="text-lg font-bold font-open">Eficiencia del Motor</h5>
                        <h3 class="text-green-600 text-3xl font-bold" id="motorEfficiency">95%</h3>
                        <p class="text-gray-500">El motor se encuentra funcionando correctamente.</p>
                        <button class="mt-3 px-4 py-1 border border-green-600 text-green-600 text-sm rounded hover:bg-green-600 hover:text-white transition">
                            Ver detalles
                        </button>
                    </div>

                    <!-- Temperatura -->
                    <div class="bg-white shadow-md rounded-3xl p-6 text-center transform transition-transform duration-300 ease-in-out hover:scale-105 hover:shadow-xl" data-aos="zoom-in" data-aos-delay="100">
                        <i class="fas fa-thermometer-half text-red-500 text-5xl mb-4"></i>
                        <h5 class="text-lg font-bold font-open">Temperatura</h5>
                        <h3 class="text-blue-600 text-3xl font-bold" id="temperatureValue">-- °C</h3>
                        <p class="text-gray-500">Temperatura dentro del rango óptimo.</p>
                        <button class="mt-3 px-4 py-1 border border-blue-600 text-blue-600 text-sm rounded hover:bg-blue-600 hover:text-white transition">
                            Ver detalles
                        </button>
                    </div>

                    <!-- Luz Ambiental -->
                    <div class="bg-white shadow-md rounded-3xl p-6 text-center transform transition-transform duration-300 ease-in-out hover:scale-105 hover:shadow-xl" data-aos="zoom-in" data-aos-delay="200">
                        <i class="fas fa-sun text-yellow-400 text-5xl mb-4"></i>
                        <h5 class="text-lg font-bold font-open">Luz Ambiental</h5>
                        <h3 class="text-gray-600 text-3xl font-bold" id="lightStatus">--</h3>
                        <p class="text-gray-500">Iluminación natural detectada.</p>
                        <button class="mt-3 px-4 py-1 border border-yellow-400 text-yellow-600 text-sm rounded hover:bg-yellow-400 hover:text-white transition">
                            Ver detalles
                        </button>
                    </div>

                </div>
            </div>
        </section>








       @*  <!-- Contenedor fijo con scroll vertical -->
        <h4 class="text-success">Registro de Monitoreo</h4>
        <div class="scroll-table-container">
            <table class="table table-bordered table-striped w-full">
                <thead class="sticky top-0 bg-success text-white">
                    <tr>
                        <th>Fecha y Hora</th>
                        <th>Sensor</th>
                        <th>Valor</th>
                        <th>Estado</th>
                    </tr>
                </thead>
                <tbody id="logTableBody">
                    <!-- Filas dinámicas -->
                </tbody>
            </table>
        </div> *@

        <section class="w-full py-16 bg-white" data-aos="fade-up">
            <div class="w-full mx-auto px-4 sm:px-6 lg:px-8">

                <!-- Encabezado -->
                <div class="flex flex-wrap justify-between items-center mb-6">
                    <div class="flex items-center gap-3">
                        <i class="fas fa-database text-green-600 text-2xl"></i>
                        <div>
                            <h4 class="text-2xl font-bold text-green-700 font-lato">📈 Registro de Monitoreo</h4>
                            <p class="text-gray-500 text-sm">Actualizado en tiempo real</p>
                        </div>
                    </div>

                    <!-- Input búsqueda -->
                    <div class="relative w-full sm:w-64 mt-4 sm:mt-0">
                        <input type="text" placeholder="🔍 Buscar sensor..." class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400" />
                        <span class="absolute top-1/2 right-3 transform -translate-y-1/2 text-gray-400">
                            <i class="fas fa-search"></i>
                        </span>
                    </div>
                </div>

                <!-- Tabla -->
                <div class="overflow-x-auto max-h-[420px] overflow-y-scroll rounded-lg border border-gray-200">
                    <table class="min-w-full table-auto text-sm text-left">
                        <thead class="bg-green-600 text-white sticky top-0 z-10">
                            <tr>
                                <th class="p-4">
                                    <i class="far fa-clock mr-1"></i> Fecha y Hora
                                </th>
                                <th class="p-4">
                                    <i class="fas fa-microchip mr-1"></i> Sensor
                                </th>
                                <th class="p-4">
                                    <i class="fas fa-chart-line mr-1"></i> Valor
                                </th>
                                <th class="p-4">
                                    <i class="fas fa-info-circle mr-1"></i> Estado
                                </th>
                            </tr>
                        </thead>
                        <tbody id="logTableBody">
                            <!-- Fila normal -->
                            <tr class="hover:bg-green-50 transition-colors duration-300">
                                <td class="p-4 text-gray-700">2025-06-14 10:22</td>
                                <td class="p-4 text-gray-700">🌡️ Temperatura</td>
                                <td class="p-4 text-gray-700">31°C</td>
                                <td class="p-4">
                                    <span class="inline-block px-3 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-700 animate-pulse">
                                        Normal
                                    </span>
                                </td>
                            </tr>
                            <!-- Fila alerta -->
                            <tr class="hover:bg-red-50 transition-colors duration-300">
                                <td class="p-4 text-gray-700">2025-06-14 10:23</td>
                                <td class="p-4 text-gray-700">💧 Humedad Suelo</td>
                                <td class="p-4 text-gray-700">12%</td>
                                <td class="p-4">
                                    <span class="inline-block px-3 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-700 animate-pulse">
                                        Alerta
                                    </span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

            </div>
        </section>





        <!-- Controles Manuales -->
        <section class="w-full bg-green-50 py-12 px-4 sm:px-6 lg:px-8 rounded-xl shadow-inner">
            <div class="max-w-7xl mx-auto">
                <h3 class="text-3xl font-bold text-green-800 flex items-center gap-3 mb-8 animate-fade-in" id="controles">
                    <i class="fas fa-sliders-h text-green-600 text-2xl"></i> Controles Manuales
                </h3>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">

                    <!-- Luces -->
                    <div class="bg-white rounded-3xl shadow-lg p-6 flex flex-col justify-between hover:scale-105 transition-transform duration-300">
                        <div>
                            <div class="flex items-center gap-3 mb-4 text-yellow-500">
                                <i class="fas fa-lightbulb fa-xl"></i>
                                <h4 class="text-xl font-semibold text-gray-800">Luces</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-6">
                                Controla el encendido y apagado de las luces de cultivo. Ideal para mantener el ciclo de luz.
                            </p>
                        </div>
                        <div class="flex flex-col gap-3">
                            <button class="bg-yellow-400 hover:bg-yellow-500 text-white py-3 rounded-full font-bold shadow-md transition duration-300" onclick="sendCommand('luces/on')">
                                <i class="fas fa-play mr-2"></i> Encender
                            </button>
                            <button class="bg-red-500 hover:bg-red-600 text-white py-3 rounded-full font-bold shadow-md transition duration-300" onclick="sendCommand('luces/off')">
                                <i class="fas fa-stop mr-2"></i> Apagar
                            </button>
                        </div>
                    </div>

                    <!-- Ventilador -->
                    <div class="bg-white rounded-3xl shadow-lg p-6 flex flex-col justify-between hover:scale-105 transition-transform duration-300">
                        <div>
                            <div class="flex items-center gap-3 mb-4 text-blue-500">
                                <i class="fas fa-fan fa-xl"></i>
                                <h4 class="text-xl font-semibold text-gray-800">Ventilador</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-6">
                                Gestiona la circulación de aire para controlar temperatura y humedad.
                            </p>
                        </div>
                        <div class="flex flex-col gap-3">
                            <button class="bg-blue-500 hover:bg-blue-600 text-white py-3 rounded-full font-bold shadow-md transition duration-300" onclick="sendCommand('ventilador/on')">
                                <i class="fas fa-play mr-2"></i> Encender
                            </button>
                            <button class="bg-red-500 hover:bg-red-600 text-white py-3 rounded-full font-bold shadow-md transition duration-300" onclick="sendCommand('ventilador/off')">
                                <i class="fas fa-stop mr-2"></i> Apagar
                            </button>
                        </div>
                    </div>

                    <!-- Bomba de Agua -->
                    <div class="bg-white rounded-3xl shadow-lg p-6 flex flex-col justify-between hover:scale-105 transition-transform duration-300">
                        <div>
                            <div class="flex items-center gap-3 mb-4 text-teal-500">
                                <i class="fas fa-water fa-xl"></i>
                                <h4 class="text-xl font-semibold text-gray-800">Bomba de Agua</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-6">
                                Activa la bomba de riego por 8 segundos para mantener la humedad del suelo adecuada.
                            </p>
                        </div>
                        <button class="bg-teal-500 hover:bg-teal-600 text-white py-3 rounded-full font-bold shadow-md transition duration-300" onclick="sendCommand('bomba')">
                            <i class="fas fa-play mr-2"></i> Activar Bomba (8s)
                        </button>
                    </div>

                </div>
            </div>
        </section>


    <!-- Modal Motor -->
    <div class="modal fade" id="modalMotor" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Eficiencia del Motor</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Detalles completos del funcionamiento y eficiencia del motor eléctrico...</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Temperatura -->
    <div class="modal fade" id="modalTemp" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title">Temperatura Ambiental</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Aquí puedes ver valores históricos o advertencias relacionadas a la temperatura.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Luz -->
    <div class="modal fade" id="modalLuz" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h5 class="modal-title">Luz Ambiental</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Datos sobre la intensidad de luz y su impacto en el sistema de crecimiento.</p>
                </div>
            </div>
        </div>
    </div>

        <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0"></script>
    <!-- Scripts -->
    <script>
            

        const apiBaseUrl = "https://localhost:7139";

        const tempChart = new Chart(document.getElementById('tempChart'), {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Temperatura (°C)',
                    data: [],
                    borderColor: '#198754',
                    backgroundColor: 'rgba(25, 135, 84, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            }
        });

        // Chart.register(ChartDataLabels); Registro del plugin

        //     const tempChart = new Chart(document.getElementById('tempChart'), {
        //     type: 'line',
        //     data: {
        //     labels: [], ← Se rellena dinámicamente
        //     datasets: [{
        //     label: 'Temperatura (°C)',
        //     data: [], ← Se rellena dinámicamente
        //     borderColor: '#198754',
        //     backgroundColor: 'rgba(25, 135, 84, 0.1)',
        //     tension: 0.4,
        //     fill: true
        //     }]
        //     },
        //     options: {
        //     plugins: {
        //     datalabels: {
        //     color: '#198754',
        //     align: 'top',
        //     anchor: 'end',
        //     font: {
        //     weight: 'bold'
        //     },
        //     formatter: function(value) {
        //     return value + '°C';
        //     }
        //     },
        //     tooltip: {
        //     enabled: true
        //     },
        //     legend: {
        //     labels: {
        //     color: '#198754'
        //     }
        //     }
        //     },
        //     scales: {
        //     x: {
        //     ticks: {
        //     color: '#198754'
        //     }
        //     },
        //     y: {
        //     ticks: {
        //     color: '#198754'
        //     }
        //     }
        //     }
        //     },
        //     plugins: [ChartDataLabels] Habilita el plugin en este gráfico
        //     });


        const humChart = new Chart(document.getElementById('humChart'), {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Humedad (%)',
                    data: [],
                    borderColor: '#198754',
                    backgroundColor: 'rgba(25, 135, 84, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            }
        });

        async function fetchLatestSensorData() {
            try {
                const response = await fetch(`${apiBaseUrl}/api/Control/lectura`);
                const data = await response.json();
                const timestamp = new Date().toLocaleTimeString();

                document.getElementById('currTemp').innerText = data.temperatura.toFixed(1);
                document.getElementById('currHum').innerText = data.humedad.toFixed(1);
                document.getElementById('temperatureValue').innerText = `${data.temperatura.toFixed(1)} °C`;
                document.getElementById('lightStatus').innerText = data.luz > 200 ? "Adecuada" : "Baja";

                pushData(tempChart, timestamp, data.temperatura);
                pushData(humChart, timestamp, data.humedad);

                addToLog('Temperatura', `${data.temperatura} °C`, data.temperatura > 35 ? 'Alta' : 'Normal');
                addToLog('Humedad', `${data.humedad} %`, data.humedad < 30 ? 'Baja' : 'Óptima');
                addToLog('Luz', `${data.luz} lx`, data.luz < 200 ? 'Baja' : 'Adecuada');

            } catch (err) {
                console.error("❌ Error al obtener datos:", err);
            }
        }

        function pushData(chart, label, value) {
            chart.data.labels.push(label);
            chart.data.datasets[0].data.push(value);
            if (chart.data.labels.length > 20) {
                chart.data.labels.shift();
                chart.data.datasets[0].data.shift();
            }
            chart.update();
        }

        function addToLog(sensor, valor, estado) {
            const tbody = document.getElementById('logTableBody');
            const row = `<tr><td>${new Date().toLocaleString()}</td><td>${sensor}</td><td>${valor}</td><td>${estado}</td></tr>`;
            tbody.insertAdjacentHTML('afterbegin', row);
        }

        // async function sendCommand(command) {
        //     try {
        //         await fetch(`${apiBaseUrl}/api/Control/comando/${command}`, { method: 'POST' });
        //         console.log(`✅ Comando enviado: ${command}`);
        //     } catch (error) {
        //         console.error('❌ Error al enviar comando:', error);
        //     }
        // }



                async function sendCommand(commandPath) {
                  try {
                    const response = await fetch(`${apiBaseUrl}/api/Control/${commandPath}`, {
                      method: "POST"
                    });

                    const text = await response.text();
                    document.getElementById('status').innerText = `Respuesta: ${text}`;
                  } catch (error) {
                    console.error('Error:', error);
                    document.getElementById('status').innerText = 'Error al enviar el comando.';
                  }
                }

        fetchLatestSensorData();
        setInterval(fetchLatestSensorData, 1000);
    </script>
</body>
</html>

